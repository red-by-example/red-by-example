The word $$error!$$ is a $$datatype!$$.

Red supports first class errors via this $$datatype!$$. 

Errors can be generated by the user or produced by the system. 
The error definitions are stored in the system/catalog/errors object.

Here is how we can view the definitions:
red>> help system/catalog/errors
  system/catalog/errors` is an object! of value:
     throw            object!   [code type break return throw continue]
     note             object!   [code type no-load]
     syntax           object!   [code type invalid missing no-header no-rs-h...
     script           object!   [code type no-value need-value not-defined n...
     math             object!   [code type zero-divide overflow positive]
     access           object!   [code type cannot-open invalid-utf8 no-conne...
     user             object!   [code type message]
     internal         object!   [code type bad-path not-here no-memory stack...
red>> 
 
To see the list of errors concerning 'math' for example, we type:
    ? system/catalog/errors/math

User errors can be created using 'make' followed by an error integer code, 
or a block containing the category, error name and (for some errors) an error argument.
.pre
.box Error code
red>> make error! 402
*** Math error: attempt to divide by zero
*** Where: ???

.box Error name
red>> make error! [math zero-divide]
*** Math error: attempt to divide by zero
*** Where: ???

.box Using type, id, and argument
red>> make error! [type: 'script id: 'no-value arg1: 'x]
*** Script Error: x has no value
*** Where: ???
