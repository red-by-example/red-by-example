The word $$extract$$ extracts a value from a $$series!$$ at 
regular intervals, returning a new $$series!$$.  

Arguments are:
    1. a $$series!$$
    2. a skip size of type $$integer!$$.

Refinements:
    /index - extract from an offset position ($$integer!$$).
    /into  - we provide an output $$series!$$ instead 
             of creating a new one.  
             The results will be appended to the $$series!$$.
.pre
red>> extract [1 2 3 4 5 6 7] 3
== [1 4 7]
%%Extracts every 3rd element of a block!%%.

red>> extract "abcdefghij" 2
== "acegi"
%%Extracts every 2nd element of a string!%%.

red>> extract/index "abcdefghij" 2 4
== "dfhj"
%%Start from an offset position (position = 4 at char! #"d")%%

red>> buffer: []
== []
%%Create an empty buffer for results.%%

red>> extract/into [1 2 3 4 5 6 7] 2 buffer
== [1 3 5 7]

red>> extract/into [10 20 30 40 50 60] 2 buffer
== [1 3 5 7 10 30 50]

red>> buffer
== [1 3 5 7 10 30 50]
%%The accumulated results in the buffer.%%
